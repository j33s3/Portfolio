1. Started with creating the angular application
2. created the main style.css
3. Created navbar with dropdown on the work button
4. Worked on the Work slider
5. Chose to move items into components, work slider, navbar, homescreen
6. Created base path for other pages and learned to route them
7. imported the navbar into seperate components
8. learned how to use SVGs for creating background in about page
9. Changed the about page to be compatable with varying screen sizes

10. Created a docker container for Mongo, for developing database schema, connected container to local API that hosts assets on port 3000
11. Fetched the description and picture for about page, Also setup sessionStorage for saving the mongoId and the description. The image is not saved due to size, instead the HTML loads the image dynamically via a URL + id.
12. Extra API routing for creating the project details page for every item.
13. Created a GIF for the project details header
14. Created an image for the work personal/school/professional pages.
15. Added routing to the school and professional pages to the API
16. Added the SVG wave to the contact page, and color coated
17. Added dynamic routing to the work-slider from the api
18. Fixed small screen compatibilit with work slider
19. Fixed work pages, where body would start to scroll in correlation with Y overflow
20. Moved the DB into the cloud,
21. Added API gateway and lambda function for tunneling DB assets
22. Uploaded initial angular front end into S3 for hosting
23. Added capstone section to school work, and changed the work container to contain skills and also added the github link.
24. changed the waves in contact and about to use an external SVG to stay within th angular SCSS bounds
25. Fixed scroll in work-details and added resume into about page
26. Added the contact form in the contact page and links to my socials (LinkedIn and Github)
27. Added Lambda for processing email post requests with the api, Also registered domain name for hosting the website and processing SES requests
28. Made some fixes to cross compatibility between desktop and mobile
29. Implemented SigV4 for securing the DB using STS tokens
30. Implemented db versioning to see if the items should be updated
31. Implemented key caching to reduce key fetching. the keys are only used for a single page (i.e loading all elements), once refreshed a new key is requested
32. Ovehauled the work slider to make it utilize intervals